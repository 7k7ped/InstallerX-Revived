name: Manual Stable Release

on:
  workflow_dispatch:
    inputs:
      version_tag:
        description: '输入版本标签 (例如 v2.2.3)'
        required: true
      changelog:
        description: '填写更新日志 (支持 Markdown)'
        required: true
        type: string

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 必须添加release权限

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整提交历史

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Verify Keystore
        run: |
          if [ -z "${{ secrets.SIGNING_KEY_STORE_BASE64 }}" ]; then
            echo "ERROR: SIGNING_KEY_STORE_BASE64 secret is missing"
            exit 1
          fi

      - name: Setup Signing Keys
        run: |
          mkdir -p keystore
          echo "${{ secrets.SIGNING_KEY_STORE_BASE64 }}" | base64 --decode > keystore/carlyu.jks
          cat <<EOF > keystore.properties
          storeFile=keystore/carlyu.jks
          keyAlias=${{ secrets.SIGNING_KEY_ALIAS }}
          keyPassword=${{ secrets.SIGNING_KEY_PASSWORD }}
          storePassword=${{ secrets.SIGNING_STORE_PASSWORD }}
          EOF

      - name: Build Stable Release APK
        run: ./gradlew assembleStableRelease

      - name: Find and Rename Universal APK
        id: rename_apk
        run: |
          PROJECT_NAME="InstallerX-Revived"
          VERSION_TAG="${{ inputs.version_tag }}"
          APK_DIR="app/build/outputs/apk/Stable/release/"
          
          ORIGINAL_APK_PATH=$(find "$APK_DIR" -maxdepth 1 -type f -name "*.apk")

          if [ -z "$ORIGINAL_APK_PATH" ]; then
            echo "ERROR: Universal APK file not found in $APK_DIR!"
            # List directory contents for easier debugging
            ls -R app/build/outputs/apk
            exit 1
          elif [ $(echo "$ORIGINAL_APK_PATH" | wc -l) -ne 1 ]; then
            echo "ERROR: Expected 1 APK file, but found multiple!"
            echo "$ORIGINAL_APK_PATH"
            exit 1
          fi
          
          NEW_APK_NAME="${PROJECT_NAME}-${VERSION_TAG}.apk"
          NEW_APK_PATH="${APK_DIR}${NEW_APK_NAME}"
          
          echo "Found APK: $ORIGINAL_APK_PATH"
          echo "Renaming to: $NEW_APK_PATH"
          mv "$ORIGINAL_APK_PATH" "$NEW_APK_PATH"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "InstallerX Revived stable ${{ inputs.version_tag }}"
          tag_name: ${{ inputs.version_tag }}
          body: ${{ inputs.changelog }}
          prerelease: false
          files: app/build/outputs/apk/Stable/release/InstallerX-Revived-${{ inputs.version_tag }}.apk